@startuml
note as Note1
  This Example is around how UI Controller works in UI MVC pattern
  And how we reuse Button/Select classes in multiple pages.
  Thus instead of IMediator using IUIController naming convention.
end note

note top of Client: IUIController controller = new LoginPageController()\n controller.register(new Button(), new Select(), new CheckBox())\n button.setUIController(controller)\n button.press()
class Client #violet
Client o-down-> IUIController : uses
interface IUIController{
    //eventHandlers
    + pressHandler()
    + hoverHandler()
}
note top of LoginPageController: pressHandler(){\n checkbox1.isSelected(true)}
class LoginPageController implements IUIController{
    + register(Button, Select, CheckBox)
    //eventHandlers
}
class RegisterPageController implements IUIController{
    + register(Button, Select, CheckBox)
    //eventHandlers
}
note top of Button: press(){\n LoginPageController.pressHandler()\n}
class Button{
    + setUIController(controller: IUIController)
    + press()
}
Button o-> IUIController
class Select{
    + setUIController(controller: IUIController)
    + select()
}
Select o-> IUIController
class CheckBox{
    + setUIController(controller: IUIController)
    + tick()
}
CheckBox o-left-> IUIController
@enduml
